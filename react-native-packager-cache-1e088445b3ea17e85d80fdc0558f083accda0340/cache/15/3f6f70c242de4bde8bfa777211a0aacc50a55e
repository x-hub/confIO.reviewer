

'use strict';

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../../../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/ReactAndroid/src/androidTest/js/MultitouchHandlingTestAppModule.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  TouchTestApp: {
    displayName: 'TouchTestApp'
  }
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/ReactAndroid/src/androidTest/js/MultitouchHandlingTestAppModule.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformHmrLibIndexJs2(Component, id);
  };
}

var React = require('React');
var Recording = require('NativeModules').Recording;
var StyleSheet = require('StyleSheet');
var TouchEventUtils = require('fbjs/lib/TouchEventUtils');
var View = require('View');

var TouchTestApp = _wrapComponent('TouchTestApp')(function (_React$Component) {
  _inherits(TouchTestApp, _React$Component);

  function TouchTestApp() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, TouchTestApp);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TouchTestApp.__proto__ || Object.getPrototypeOf(TouchTestApp)).call.apply(_ref, [this].concat(args))), _this), _this.handleStartShouldSetResponder = function (e) {
      return true;
    }, _this.handleOnResponderMove = function (e) {
      e = TouchEventUtils.extractSingleTouch(e.nativeEvent);
      Recording.record('move;' + e.touches.length);
    }, _this.handleResponderStart = function (e) {
      e = TouchEventUtils.extractSingleTouch(e.nativeEvent);
      if (e.touches) {
        Recording.record('start;' + e.touches.length);
      } else {
        Recording.record('start;ExtraPointer');
      }
    }, _this.handleResponderEnd = function (e) {
      e = TouchEventUtils.extractSingleTouch(e.nativeEvent);
      if (e.touches) {
        Recording.record('end;' + e.touches.length);
      } else {
        Recording.record('end;ExtraPointer');
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(TouchTestApp, [{
    key: 'render',
    value: function render() {
      return React.createElement(View, {
        style: styles.container,
        onStartShouldSetResponder: this.handleStartShouldSetResponder,
        onResponderMove: this.handleOnResponderMove,
        onResponderStart: this.handleResponderStart,
        onResponderEnd: this.handleResponderEnd,
        collapsable: false,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 50
        }
      });
    }
  }]);

  return TouchTestApp;
}(React.Component));

var styles = StyleSheet.create({
  container: {
    flex: 1
  }
});

module.exports = TouchTestApp;