

'use strict';

onmessage = function () {
  var visibilityState;
  var showVisibilityWarning = function () {
    var hasWarned = false;
    return function () {
      if (hasWarned || console.warn.toString().includes('[native code]')) {
        return;
      }
      hasWarned = true;
      console.warn('Remote debugger is in a background tab which may cause apps to ' + 'perform slowly. Fix this by foregrounding the tab (or opening it in ' + 'a separate window).');
    };
  }();

  var messageHandlers = {
    'executeApplicationScript': function executeApplicationScript(message, sendReply) {
      for (var key in message.inject) {
        self[key] = JSON.parse(message.inject[key]);
      }
      var error;
      try {
        importScripts(message.url);
      } catch (err) {
        error = err.message;
      }
      sendReply(null, error);
    },
    'setDebuggerVisibility': function setDebuggerVisibility(message) {
      visibilityState = message.visibilityState;
    }
  };

  return function (message) {
    if (visibilityState === 'hidden') {
      showVisibilityWarning();
    }

    var object = message.data;

    var sendReply = function sendReply(result, error) {
      postMessage({ replyID: object.id, result: result, error: error });
    };

    var handler = messageHandlers[object.method];
    if (handler) {
      handler(object, sendReply);
    } else {
      var returnValue = [[], [], [], 0];
      var error;
      try {
        if (typeof __fbBatchedBridge === 'object') {
          returnValue = __fbBatchedBridge[object.method].apply(null, object.arguments);
        } else {
          error = 'Failed to call function, __fbBatchedBridge is undefined';
        }
      } catch (err) {
        error = err.message;
      } finally {
        sendReply(JSON.stringify(returnValue), error);
      }
    }
  };
}();