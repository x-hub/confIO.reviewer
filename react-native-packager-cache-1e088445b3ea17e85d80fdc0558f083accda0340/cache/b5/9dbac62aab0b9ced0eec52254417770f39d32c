Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _jsxFileName = '/home/bassihassan/Desktop/confIOReviewer/node_modules/rn-placeholder/src/placeholderContainer.js';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _animations = require('./animation/animations');

var _animations2 = _interopRequireDefault(_animations);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderAnimation = function renderAnimation(Animation, Component, props) {
  if (!Animation) {
    throw new Error(Animation.name + ' doesnt exist in the current project');
  }
  return _react2.default.createElement(
    Animation,
    {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 10
      }
    },
    _react2.default.createElement(Component, _extends({}, props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 11
      }
    }))
  );
};

var connect = function connect(PlaceholderComponent) {
  function placeHolder(props) {
    var onReady = props.onReady,
        animate = props.animate,
        children = props.children,
        customAnimate = props.customAnimate;


    if (onReady) {
      return children;
    }

    if (customAnimate) {
      return renderAnimation(customAnimate, PlaceholderComponent, props);
    }

    if (animate) {
      return renderAnimation(_animations2.default[animate], PlaceholderComponent, props);
    }
    return _react2.default.createElement(PlaceholderComponent, _extends({}, props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 35
      }
    }));
  }

  placeHolder.propTypes = {
    onReady: _propTypes2.default.bool,
    children: _propTypes2.default.element,
    animate: _propTypes2.default.string,
    customAnimate: _propTypes2.default.func
  };

  placeHolder.defaultProps = {
    onReady: false,
    animate: null,
    children: null,
    customAnimate: null
  };

  return placeHolder;
};

exports.default = connect;