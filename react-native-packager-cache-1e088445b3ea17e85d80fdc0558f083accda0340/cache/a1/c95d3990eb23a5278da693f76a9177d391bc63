

"use strict";

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../../../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/ReactAndroid/src/androidTest/js/ProgressBarTestModule.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  ProgressBarSampleApp: {
    displayName: 'ProgressBarSampleApp'
  }
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/ReactAndroid/src/androidTest/js/ProgressBarTestModule.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformHmrLibIndexJs2(Component, id);
  };
}

var BatchedBridge = require('BatchedBridge');
var React = require('React');
var ProgressBar = require('ProgressBarAndroid');
var View = require('View');

var renderApplication = require('renderApplication');

var ProgressBarSampleApp = _wrapComponent('ProgressBarSampleApp')(function (_React$Component) {
  _inherits(ProgressBarSampleApp, _React$Component);

  function ProgressBarSampleApp() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ProgressBarSampleApp);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ProgressBarSampleApp.__proto__ || Object.getPrototypeOf(ProgressBarSampleApp)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ProgressBarSampleApp, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 26
          }
        },
        React.createElement(ProgressBar, { styleAttr: 'Horizontal', testID: 'Horizontal', __source: {
            fileName: _jsxFileName,
            lineNumber: 27
          }
        }),
        React.createElement(ProgressBar, { styleAttr: 'Small', testID: 'Small', __source: {
            fileName: _jsxFileName,
            lineNumber: 28
          }
        }),
        React.createElement(ProgressBar, { styleAttr: 'Large', testID: 'Large', __source: {
            fileName: _jsxFileName,
            lineNumber: 29
          }
        }),
        React.createElement(ProgressBar, { styleAttr: 'Normal', testID: 'Normal', __source: {
            fileName: _jsxFileName,
            lineNumber: 30
          }
        }),
        React.createElement(ProgressBar, { styleAttr: 'Inverse', testID: 'Inverse', __source: {
            fileName: _jsxFileName,
            lineNumber: 31
          }
        }),
        React.createElement(ProgressBar, { styleAttr: 'SmallInverse', testID: 'SmallInverse', __source: {
            fileName: _jsxFileName,
            lineNumber: 32
          }
        }),
        React.createElement(ProgressBar, { styleAttr: 'LargeInverse', testID: 'LargeInverse', __source: {
            fileName: _jsxFileName,
            lineNumber: 33
          }
        }),
        React.createElement(
          View,
          { style: { width: 200 }, __source: {
              fileName: _jsxFileName,
              lineNumber: 34
            }
          },
          React.createElement(ProgressBar, { styleAttr: 'Horizontal', testID: 'Horizontal200', __source: {
              fileName: _jsxFileName,
              lineNumber: 35
            }
          })
        )
      );
    }
  }]);

  return ProgressBarSampleApp;
}(React.Component));

var ProgressBarTestModule = {
  renderProgressBarApplication: function renderProgressBarApplication(rootTag) {
    renderApplication(ProgressBarSampleApp, {}, rootTag);
  }
};

BatchedBridge.registerCallableModule('ProgressBarTestModule', ProgressBarTestModule);

module.exports = ProgressBarTestModule;