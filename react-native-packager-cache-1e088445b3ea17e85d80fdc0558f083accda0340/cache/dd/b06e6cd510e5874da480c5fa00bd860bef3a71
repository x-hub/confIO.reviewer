

'use strict';

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../../../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/ReactAndroid/src/androidTest/js/SwipeRefreshLayoutTestModule.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  Row: {
    displayName: 'Row'
  },
  SwipeRefreshLayoutTestApp: {
    displayName: 'SwipeRefreshLayoutTestApp'
  }
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/ReactAndroid/src/androidTest/js/SwipeRefreshLayoutTestModule.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformHmrLibIndexJs2(Component, id);
  };
}

var BatchedBridge = require('BatchedBridge');
var React = require('React');
var RecordingModule = require('NativeModules').SwipeRefreshLayoutRecordingModule;
var ScrollView = require('ScrollView');
var RefreshControl = require('RefreshControl');
var Text = require('Text');
var TouchableWithoutFeedback = require('TouchableWithoutFeedback');
var View = require('View');

var Row = _wrapComponent('Row')(function (_React$Component) {
  _inherits(Row, _React$Component);

  function Row() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Row);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Row.__proto__ || Object.getPrototypeOf(Row)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      clicks: 0
    }, _this._onPress = function () {
      _this.setState({ clicks: _this.state.clicks + 1 });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Row, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        TouchableWithoutFeedback,
        { onPress: this._onPress, __source: {
            fileName: _jsxFileName,
            lineNumber: 30
          }
        },
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 31
            }
          },
          React.createElement(
            Text,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 32
              }
            },
            this.state.clicks + ' clicks'
          )
        )
      );
    }
  }]);

  return Row;
}(React.Component));

var app = null;

var SwipeRefreshLayoutTestApp = _wrapComponent('SwipeRefreshLayoutTestApp')(function (_React$Component2) {
  _inherits(SwipeRefreshLayoutTestApp, _React$Component2);

  function SwipeRefreshLayoutTestApp() {
    var _ref2;

    var _temp2, _this2, _ret2;

    _classCallCheck(this, SwipeRefreshLayoutTestApp);

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, (_ref2 = SwipeRefreshLayoutTestApp.__proto__ || Object.getPrototypeOf(SwipeRefreshLayoutTestApp)).call.apply(_ref2, [this].concat(args))), _this2), _this2.state = {
      rows: 2
    }, _temp2), _possibleConstructorReturn(_this2, _ret2);
  }

  _createClass(SwipeRefreshLayoutTestApp, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      app = this;
    }
  }, {
    key: 'render',
    value: function render() {
      var rows = [];
      for (var i = 0; i < this.state.rows; i++) {
        rows.push(React.createElement(Row, { key: i, __source: {
            fileName: _jsxFileName,
            lineNumber: 59
          }
        }));
      }
      return React.createElement(
        ScrollView,
        {
          style: { flex: 1 },
          refreshControl: React.createElement(RefreshControl, {
            style: { flex: 1 },
            refreshing: false,
            onRefresh: function onRefresh() {
              return RecordingModule.onRefresh();
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 65
            }
          }), __source: {
            fileName: _jsxFileName,
            lineNumber: 62
          }
        },
        rows
      );
    }
  }]);

  return SwipeRefreshLayoutTestApp;
}(React.Component));

var SwipeRefreshLayoutTestModule = {
  SwipeRefreshLayoutTestApp: SwipeRefreshLayoutTestApp,
  setRows: function setRows(rows) {
    if (app != null) {
      app.setState({ rows: rows });
    }
  }
};

BatchedBridge.registerCallableModule('SwipeRefreshLayoutTestModule', SwipeRefreshLayoutTestModule);

module.exports = SwipeRefreshLayoutTestModule;