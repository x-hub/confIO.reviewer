'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../../../../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class,
    _temp,
    _jsxFileName = '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/local-cli/templates/HelloNavigation/views/chat/ChatListScreen.js';

var _reactNative = require('react-native');

var _ListItem = require('../../components/ListItem');

var _ListItem2 = _interopRequireDefault(_ListItem);

var _Backend = require('../../lib/Backend');

var _Backend2 = _interopRequireDefault(_Backend);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  ChatListScreen: {
    displayName: 'ChatListScreen'
  }
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/local-cli/templates/HelloNavigation/views/chat/ChatListScreen.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformHmrLibIndexJs2(Component, id);
  };
}

var ChatListScreen = _wrapComponent('ChatListScreen')((_temp = _class = function (_Component) {
  _inherits(ChatListScreen, _Component);

  function ChatListScreen(props) {
    _classCallCheck(this, ChatListScreen);

    var _this = _possibleConstructorReturn(this, (ChatListScreen.__proto__ || Object.getPrototypeOf(ChatListScreen)).call(this, props));

    _this.renderRow = function (name) {
      return _react3.default.createElement(_ListItem2.default, {
        label: name,
        onPress: function onPress() {
          _this.props.navigation.navigate('Chat', {
            name: name
          });
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 54
        }
      });
    };

    var ds = new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
        return r1 !== r2;
      } });
    _this.state = {
      isLoading: true,
      dataSource: ds
    };
    return _this;
  }

  _createClass(ChatListScreen, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var chatList;
      return regeneratorRuntime.async(function componentDidMount$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(_Backend2.default.fetchChatList());

            case 2:
              chatList = _context.sent;

              this.setState(function (prevState) {
                return {
                  dataSource: prevState.dataSource.cloneWithRows(chatList),
                  isLoading: false
                };
              });

            case 4:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.state.isLoading) {
        return _react3.default.createElement(
          _reactNative.View,
          { style: styles.loadingScreen, __source: {
              fileName: _jsxFileName,
              lineNumber: 69
            }
          },
          _react3.default.createElement(_reactNative.ActivityIndicator, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 70
            }
          })
        );
      }
      return _react3.default.createElement(_reactNative.ListView, {
        dataSource: this.state.dataSource,
        renderRow: this.renderRow,
        style: styles.listView,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 75
        }
      });
    }
  }]);

  return ChatListScreen;
}(_react2.Component), _class.navigationOptions = {
  title: 'Chats',
  header: {
    visible: _reactNative.Platform.OS === 'ios'
  },
  tabBar: {
    icon: function icon(_ref) {
      var tintColor = _ref.tintColor;
      return _react3.default.createElement(_reactNative.Image, {
        source: require('./chat-icon.png'),
        style: [styles.icon, { tintColor: tintColor }],
        __source: {
          fileName: _jsxFileName,
          lineNumber: 24
        }
      });
    }
  }
}, _temp));

exports.default = ChatListScreen;


var styles = _reactNative.StyleSheet.create({
  loadingScreen: {
    backgroundColor: 'white',
    paddingTop: 8,
    flex: 1
  },
  listView: {
    backgroundColor: 'white'
  },
  icon: {
    width: 30,
    height: 26
  }
});