

'use strict';

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../../../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/ReactAndroid/src/androidTest/js/TimePickerDialogTestModule.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  TimePickerDialogTestApp: {
    displayName: 'TimePickerDialogTestApp'
  }
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/ReactAndroid/src/androidTest/js/TimePickerDialogTestModule.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformHmrLibIndexJs2(Component, id);
  };
}

var BatchedBridge = require('BatchedBridge');
var TimePickerAndroid = require('TimePickerAndroid');
var React = require('React');
var RecordingModule = require('NativeModules').TimePickerDialogRecordingModule;
var View = require('View');

var TimePickerDialogTestApp = _wrapComponent('TimePickerDialogTestApp')(function (_React$Component) {
  _inherits(TimePickerDialogTestApp, _React$Component);

  function TimePickerDialogTestApp() {
    _classCallCheck(this, TimePickerDialogTestApp);

    return _possibleConstructorReturn(this, (TimePickerDialogTestApp.__proto__ || Object.getPrototypeOf(TimePickerDialogTestApp)).apply(this, arguments));
  }

  _createClass(TimePickerDialogTestApp, [{
    key: 'render',
    value: function render() {
      return React.createElement(View, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 22
        }
      });
    }
  }]);

  return TimePickerDialogTestApp;
}(React.Component));

var TimePickerDialogTestModule = {
  TimePickerDialogTestApp: TimePickerDialogTestApp,
  showTimePickerDialog: function showTimePickerDialog(options) {
    TimePickerAndroid.open(options).then(function (_ref) {
      var action = _ref.action,
          hour = _ref.hour,
          minute = _ref.minute;

      if (action === TimePickerAndroid.timeSetAction) {
        RecordingModule.recordTime(hour, minute);
      } else if (action === TimePickerAndroid.dismissedAction) {
        RecordingModule.recordDismissed();
      }
    }, function (_ref2) {
      var code = _ref2.code,
          message = _ref2.message;
      return RecordingModule.recordError();
    });
  }
};

BatchedBridge.registerCallableModule('TimePickerDialogTestModule', TimePickerDialogTestModule);

module.exports = TimePickerDialogTestModule;