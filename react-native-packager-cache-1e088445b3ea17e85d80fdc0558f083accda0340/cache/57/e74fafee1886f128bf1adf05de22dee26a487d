Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.actions = undefined;

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if ((typeof Symbol === 'function' ? Symbol.iterator : '@@iterator') in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.fetchTalks = fetchTalks;

var _reactRedux = require('react-redux');

var _redux = require('redux');

var _login = require('./login.template');

var _login2 = _interopRequireDefault(_login);

var _nativeStorage = require('../App/Services/nativeStorage');

var _nativeStorage2 = _interopRequireDefault(_nativeStorage);

var _rxjs = require('rxjs');

var _reactNative = require('react-native');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
    Login: {
        displayName: 'Login'
    }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: '/home/bassihassan/Desktop/confIOReviewer/src/Login/index.js',
    components: _components,
    locals: [module],
    imports: [_react3.default]
});

function _wrapComponent(id) {
    return function (Component) {
        return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
}

var actions = exports.actions = {
    FETCH_DEFAULT_EVENT: 'FETCH_DEFAULT_EVENT'
};

var actionCreators = {
    fetchDefaultEvent: fetchDefaultEvent
};

var Login = _wrapComponent('Login')(function (_Component) {
    _inherits(Login, _Component);

    function Login() {
        _classCallCheck(this, Login);

        return _possibleConstructorReturn(this, (Login.__proto__ || Object.getPrototypeOf(Login)).apply(this, arguments));
    }

    _createClass(Login, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.props.fetchDefaultEvent();
        }
    }, {
        key: 'render',
        value: function render() {
            return (0, _login2.default)(this.props);
        }
    }]);

    return Login;
}(_react2.Component));

function fetchTalks(event) {
    _nativeStorage2.default.get(event.code + '-activity').subscribe(function (e) {
        alert(JSON.stringify(e));
    });
    var talks = _nativeStorage2.default.get(event.code + '-talks');
    var talksReviewed = _nativeStorage2.default.get(event.code + '-talks-reviewed');
    var talksLater = _nativeStorage2.default.get(event.code + '-talks-later');
    var user = _nativeStorage2.default.get(event.code + '-user');

    return _rxjs.Observable.forkJoin([talks, talksReviewed, talksLater, user]).switchMap(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 4),
            talks = _ref2[0],
            reviewed = _ref2[1],
            later = _ref2[2],
            user = _ref2[3];

        return _rxjs.Observable.of({ event: event, talks: talks, reviewed: reviewed, later: later, user: user });
    }).toPromise();
}
function fetchDefaultEvent() {
    var defaultEvent = _reactNative.AsyncStorage.getItem('events').then(function (events) {
        var event = JSON.parse(events)[0];
        if (event) {
            return _reactNative.AsyncStorage.getItem('event-' + event);
        } else {
            return Promise.reject();
        }
    }).then(function (event) {
        return JSON.parse(event);
    }).catch(function (err) {
        return null;
    });
    return {
        type: actions.FETCH_DEFAULT_EVENT,
        payload: defaultEvent
    };
}

function mapStateToProps(state) {
    return state.login;
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)(actionCreators, dispatch);
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Login);