Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/bassihassan/Desktop/confIOReviewer/src/Sync/sync.template.js';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactNative = require('react-native');

var _nativeBase = require('native-base');

var _lottieReactNative = require('lottie-react-native');

var _lottieReactNative2 = _interopRequireDefault(_lottieReactNative);

var _shared = require('../../shared');

var _reactNativePullRefresh = require('react-native-pull-refresh');

var _reactNativePullRefresh2 = _interopRequireDefault(_reactNativePullRefresh);

var _sync = require('./sync.style');

var _sync2 = _interopRequireDefault(_sync);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var animations = {
    coffee_start: require('./animations/coffee_start.json'),
    coffee_pull: require('./animations/coffee_pull.json'),
    coffee_repeat: require('./animations/coffee_repeat.json'),
    coffee_end: require('./animations/coffee_end.json'),
    empty_box: require('./animations/empty_box.json')
};

var actionTypes = {
    VOTE: 'VOTE'
};

exports.default = function (props) {
    var actions = props.actions,
        isRefreshing = props.isRefreshing,
        syncActions = props.syncActions,
        removeAction = props.removeAction;
    var _props$navigation = props.navigation,
        goBack = _props$navigation.goBack,
        navigate = _props$navigation.navigate;

    var ActionsList = function ActionsList() {
        return _react2.default.createElement(_reactNativePullRefresh2.default, {
            isRefreshing: isRefreshing,
            onRefresh: syncActions,
            animationBackgroundColor: _sync2.default.animationBackgroundColor,
            pullHeight: 180,
            contentView: renderContent(),
            onPullAnimationSrc: animations.coffee_pull,
            onStartRefreshAnimationSrc: animations.coffee_start,
            onRefreshAnimationSrc: animations.coffee_repeat,
            onEndRefreshAnimationSrc: animations.coffee_end,
            __source: {
                fileName: _jsxFileName,
                lineNumber: 38
            }
        });
    };
    var EmptyActionsList = function EmptyActionsList() {
        return _react2.default.createElement(
            _reactNative.View,
            {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 51
                }
            },
            _react2.default.createElement(_shared.AutoPlayAnimation, {
                style: _sync2.default.emptyActionAnimation,
                source: animations.empty_box,
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 52
                }
            }),
            _react2.default.createElement(
                _reactNative.Text,
                { style: _sync2.default.emptyActionsListText, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 56
                    }
                },
                'You\'re Lazy, No actions to Sync'
            )
        );
    };
    var SyncBody = actions.lenght ? ActionsList : EmptyActionsList;
    return _react2.default.createElement(
        _nativeBase.Container,
        {
            __source: {
                fileName: _jsxFileName,
                lineNumber: 61
            }
        },
        _react2.default.createElement(
            _nativeBase.Header,
            { style: _sync2.default.header, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 62
                }
            },
            _react2.default.createElement(
                _nativeBase.Left,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 63
                    }
                },
                _react2.default.createElement(
                    _nativeBase.Button,
                    { onPress: function onPress() {
                            return goBack();
                        }, transparent: true, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 64
                        }
                    },
                    _react2.default.createElement(_nativeBase.Icon, { style: _sync2.default.goBackIcon, name: 'arrow-back', __source: {
                            fileName: _jsxFileName,
                            lineNumber: 65
                        }
                    })
                )
            ),
            _react2.default.createElement(
                _reactNative.Text,
                { style: _sync2.default.sceneTitle, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 68
                    }
                },
                'Synchronize'
            )
        ),
        _react2.default.createElement(
            _nativeBase.Content,
            {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 70
                }
            },
            _react2.default.createElement(SyncBody, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 71
                }
            })
        )
    );

    function renderContent() {
        return _react2.default.createElement(
            _reactNative.View,
            {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 78
                }
            },
            _react2.default.createElement(_reactNative.FlatList, {
                data: actions,
                renderItem: renderAction,
                keyExtractor: function keyExtractor(_ref) {
                    var id = _ref.id;
                    return id;
                },
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 79
                }
            })
        );
    }

    function renderAction(_ref2) {
        var _ref2$item = _ref2.item,
            type = _ref2$item.type,
            target = _ref2$item.target,
            payload = _ref2$item.payload,
            timestamp = _ref2$item.timestamp;

        return _react2.default.createElement(
            _reactNative.View,
            { key: target, style: _sync2.default.actionContainer, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 90
                }
            },
            _react2.default.createElement(
                _nativeBase.Left,
                { style: _sync2.default.actionTextContainer, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 91
                    }
                },
                humanReadable()
            ),
            _react2.default.createElement(
                _nativeBase.Right,
                { style: _sync2.default.actionRemoveContainer, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 94
                    }
                },
                _react2.default.createElement(
                    _nativeBase.Button,
                    { danger: true,
                        onPress: removeAction,
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 95
                        }
                    },
                    _react2.default.createElement(_nativeBase.Icon, { name: 'trash', __source: {
                            fileName: _jsxFileName,
                            lineNumber: 98
                        }
                    })
                )
            )
        );
        function humanReadable() {
            switch (type) {
                case actionTypes.VOTE:
                    return _react2.default.createElement(
                        _reactNative.Text,
                        { style: _sync2.default.actionText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 107
                            }
                        },
                        'Voted for ',
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: _sync2.default.actionVoteTarget, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 108
                                }
                            },
                            target
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            {
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 109
                                }
                            },
                            ' with '
                        ),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: _sync2.default.actionVoteResult, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 110
                                }
                            },
                            payload
                        )
                    );
                default:
                    return _react2.default.createElement(
                        _reactNative.Text,
                        { style: _sync2.default.actionText, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 114
                            }
                        },
                        'Unkown Event'
                    );
            }
        }
    }
};