
'use strict';

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class,
    _temp,
    _jsxFileName = '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableQuickActionButton.js';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  SwipeableQuickActionButton: {
    displayName: 'SwipeableQuickActionButton'
  }
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableQuickActionButton.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformHmrLibIndexJs2(Component, id);
  };
}

var Image = require('Image');
var PropTypes = require('prop-types');
var React = require('React');
var Text = require('Text');
var TouchableHighlight = require('TouchableHighlight');
var View = require('View');
var ViewPropTypes = require('ViewPropTypes');

var SwipeableQuickActionButton = _wrapComponent('SwipeableQuickActionButton')((_temp = _class = function (_React$Component) {
  _inherits(SwipeableQuickActionButton, _React$Component);

  function SwipeableQuickActionButton() {
    _classCallCheck(this, SwipeableQuickActionButton);

    return _possibleConstructorReturn(this, (SwipeableQuickActionButton.__proto__ || Object.getPrototypeOf(SwipeableQuickActionButton)).apply(this, arguments));
  }

  _createClass(SwipeableQuickActionButton, [{
    key: 'render',
    value: function render() {
      if (!this.props.imageSource && !this.props.text) {
        return null;
      }

      return React.createElement(
        TouchableHighlight,
        {
          onPress: this.props.onPress,
          testID: this.props.testID,
          underlayColor: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 56
          }
        },
        React.createElement(
          View,
          { style: this.props.style, __source: {
              fileName: _jsxFileName,
              lineNumber: 60
            }
          },
          React.createElement(Image, {
            accessibilityLabel: this.props.accessibilityLabel,
            source: this.props.imageSource,
            style: this.props.imageStyle,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 61
            }
          }),
          React.createElement(
            Text,
            { style: this.props.textStyle, __source: {
                fileName: _jsxFileName,
                lineNumber: 66
              }
            },
            this.props.text
          )
        )
      );
    }
  }]);

  return SwipeableQuickActionButton;
}(React.Component), _class.propTypes = {
  accessibilityLabel: PropTypes.string,
  imageSource: Image.propTypes.source.isRequired,
  imageStyle: Image.propTypes.style,
  onPress: PropTypes.func,
  style: ViewPropTypes.style,
  testID: PropTypes.string,
  text: PropTypes.string,
  textStyle: Text.propTypes.style
}, _temp));

module.exports = SwipeableQuickActionButton;