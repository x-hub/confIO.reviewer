

'use strict';

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../../../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/ReactAndroid/src/androidTest/js/TouchBubblingTestAppModule.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  TouchBubblingTestApp: {
    displayName: 'TouchBubblingTestApp'
  }
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/ReactAndroid/src/androidTest/js/TouchBubblingTestAppModule.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformHmrLibIndexJs2(Component, id);
  };
}

var Recording = require('NativeModules').Recording;

var React = require('React');
var StyleSheet = require('StyleSheet');
var View = require('View');
var TouchableWithoutFeedback = require('TouchableWithoutFeedback');

var TouchBubblingTestApp = _wrapComponent('TouchBubblingTestApp')(function (_React$Component) {
  _inherits(TouchBubblingTestApp, _React$Component);

  function TouchBubblingTestApp() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, TouchBubblingTestApp);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TouchBubblingTestApp.__proto__ || Object.getPrototypeOf(TouchBubblingTestApp)).call.apply(_ref, [this].concat(args))), _this), _this.handlePress = function (record) {
      Recording.record(record);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(TouchBubblingTestApp, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 28
          }
        },
        React.createElement(
          TouchableWithoutFeedback,
          { onPress: this.handlePress.bind(this, 'outer'), testID: 'D', __source: {
              fileName: _jsxFileName,
              lineNumber: 29
            }
          },
          React.createElement(
            View,
            { style: styles.outer, __source: {
                fileName: _jsxFileName,
                lineNumber: 30
              }
            },
            React.createElement(
              TouchableWithoutFeedback,
              { onPress: this.handlePress.bind(this, 'inner'), testID: 'B', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 31
                }
              },
              React.createElement(
                View,
                { style: styles.inner, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 32
                  }
                },
                React.createElement(View, { style: styles.superinner, testID: 'A', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 33
                  }
                })
              )
            ),
            React.createElement(View, { style: styles.inner, testID: 'C', __source: {
                fileName: _jsxFileName,
                lineNumber: 36
              }
            })
          )
        ),
        React.createElement(
          TouchableWithoutFeedback,
          { onPress: this.handlePress.bind(this, 'outsider'), testID: 'E', __source: {
              fileName: _jsxFileName,
              lineNumber: 39
            }
          },
          React.createElement(View, { style: styles.element, __source: {
              fileName: _jsxFileName,
              lineNumber: 40
            }
          })
        )
      );
    }
  }]);

  return TouchBubblingTestApp;
}(React.Component));

var styles = StyleSheet.create({
  container: {
    flexDirection: 'column',
    backgroundColor: '#ccdd44'
  },
  element: {
    backgroundColor: '#ff0000',
    height: 100,
    margin: 30
  },
  outer: {
    backgroundColor: '#00ff00',
    height: 100,
    margin: 30,
    flexDirection: 'row',
    justifyContent: 'space-between'
  },
  inner: {
    backgroundColor: '#0000ff',
    height: 50,
    width: 50,
    margin: 10
  },
  superinner: {
    backgroundColor: '#eeeeee',
    height: 20,
    width: 20
  }
});

module.exports = TouchBubblingTestApp;