'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../../../../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/local-cli/templates/HelloNavigation/views/welcome/WelcomeText.android.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  WelcomeText: {
    displayName: 'WelcomeText'
  }
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/bassihassan/Desktop/confIOReviewer/node_modules/react-native/local-cli/templates/HelloNavigation/views/welcome/WelcomeText.android.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformHmrLibIndexJs2(Component, id);
  };
}

var WelcomeText = _wrapComponent('WelcomeText')(function (_Component) {
  _inherits(WelcomeText, _Component);

  function WelcomeText() {
    _classCallCheck(this, WelcomeText);

    return _possibleConstructorReturn(this, (WelcomeText.__proto__ || Object.getPrototypeOf(WelcomeText)).apply(this, arguments));
  }

  _createClass(WelcomeText, [{
    key: 'render',
    value: function render() {
      return _react3.default.createElement(
        _reactNative.View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 13
          }
        },
        _react3.default.createElement(
          _reactNative.Text,
          { style: styles.welcome, __source: {
              fileName: _jsxFileName,
              lineNumber: 14
            }
          },
          'Welcome to React Native!'
        ),
        _react3.default.createElement(
          _reactNative.Text,
          { style: styles.instructions, __source: {
              fileName: _jsxFileName,
              lineNumber: 17
            }
          },
          'This app shows the basics of navigating between a few screens, working with ListView and handling text input.'
        ),
        _react3.default.createElement(
          _reactNative.Text,
          { style: styles.instructions, __source: {
              fileName: _jsxFileName,
              lineNumber: 21
            }
          },
          'Modify any files to get started. For example try changing the file views/welcome/WelcomeText.android.js.'
        ),
        _react3.default.createElement(
          _reactNative.Text,
          { style: styles.instructions, __source: {
              fileName: _jsxFileName,
              lineNumber: 25
            }
          },
          'Double tap R on your keyboard to reload,',
          '\n',
          'Shake or press menu button for dev menu.'
        )
      );
    }
  }]);

  return WelcomeText;
}(_react2.Component));

exports.default = WelcomeText;


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'white',
    padding: 20
  },
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    margin: 16
  },
  instructions: {
    textAlign: 'center',
    color: '#333333',
    marginBottom: 12
  }
});