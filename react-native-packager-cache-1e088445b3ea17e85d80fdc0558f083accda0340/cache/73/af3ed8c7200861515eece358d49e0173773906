var fs = require('fs');
var toCamelCase = require('lodash').camelCase;

var revokePatch = require('./patches/revokePatch');
var makeSettingsPatch = require('./patches/makeSettingsPatch');
var makeBuildPatch = require('./patches/makeBuildPatch');
var makeStringsPatch = require('./patches/makeStringsPatch');
var makeImportPatch = require('./patches/makeImportPatch');
var makePackagePatch = require('./patches/makePackagePatch');

module.exports = function unregisterNativeAndroidModule(name, androidConfig, projectConfig) {
  var buildPatch = makeBuildPatch(name);
  var strings = fs.readFileSync(projectConfig.stringsPath, 'utf8');
  var params = {};

  strings.replace(/moduleConfig="true" name="(\w+)">(.*)</g, function (_, param, value) {
    params[param.slice(toCamelCase(name).length + 1)] = value;
  });

  revokePatch(projectConfig.settingsGradlePath, makeSettingsPatch(name, androidConfig, projectConfig));

  revokePatch(projectConfig.buildGradlePath, buildPatch);
  revokePatch(projectConfig.stringsPath, makeStringsPatch(params, name));

  revokePatch(projectConfig.mainFilePath, makePackagePatch(androidConfig.packageInstance, params, name));

  revokePatch(projectConfig.mainFilePath, makeImportPatch(androidConfig.packageImportPath));
};