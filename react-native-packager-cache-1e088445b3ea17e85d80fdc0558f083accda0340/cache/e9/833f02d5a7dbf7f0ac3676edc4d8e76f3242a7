Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.actions = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _loginWithQRCode = require('./loginWithQRCode.template');

var _loginWithQRCode2 = _interopRequireDefault(_loginWithQRCode);

var _reactRedux = require('react-redux');

var _redux = require('redux');

var _reactNative = require('react-native');

var _navigator = require('../../Navigator/navigator.actions');

var _navigator2 = _interopRequireDefault(_navigator);

var _nativeStorage = require('../../App/Services/nativeStorage');

var _nativeStorage2 = _interopRequireDefault(_nativeStorage);

var _Http = require('../../App/Services/Http');

var _Http2 = _interopRequireDefault(_Http);

var _rxjs = require('rxjs');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var actions = exports.actions = {
    QR_CODE_READ: 'QR_CODE_READ'
};

var actionCreators = {
    onQRCodeRead: onQRCodeRead
};

function unescapeHtml(safe) {
    return safe.replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '"').replace(/&#039;/g, "'");
}

function handleQRCode(data) {
    var _JSON$parse = JSON.parse(data),
        authToken = _JSON$parse.authToken,
        authEndpoint = _JSON$parse.authEndpoint,
        eventDetailsEndpoint = _JSON$parse.eventDetailsEndpoint;

    if (!authToken || !authEndpoint || !eventDetailsEndpoint) return Promise.resolve({ type: actions.QR_CODE_READ, payload: { error: true } });
    return Promise.resolve({ type: _navigator2.default.GOTO_Feed, payload: JSON.parse(data) });
}

function onQRCodeRead(_ref) {
    var data = _ref.data;

    return handleQRCode(data);
}

function mapStateToProps(state) {
    return state.loginWithQRCode;
}

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)(actionCreators, dispatch);
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_loginWithQRCode2.default);