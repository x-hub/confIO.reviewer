Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _actionsType = require("../App/actionsType");

var _talks2 = require("../Data/talks");

var _talks3 = _interopRequireDefault(_talks2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        talksReviewed: [],
        talksNotReviewed: [],
        talksToBeReviewedLater: [],
        current: _talks3.default
    };
    var action = arguments[1];

    switch (action.type) {
        case _actionsType.ACTIONS.TALK_RATE:
            var _talks = state.current.filter(function (e) {
                return e.talk.id != action.payload.talk.id;
            });
            var talksReviewed = state.talksReviewed.slice();
            talksReviewed.push(action.payload);
            return _extends({}, state, {
                current: _talks,
                talksReviewed: talksReviewed
            });
        case _actionsType.ACTIONS.TALK_RATE_LATER:
            _talks = state.current.filter(function (e) {
                return e.talk.id != action.payload.talk.id;
            });
            var talksToBeReviewedLater = state.talksToBeReviewedLater.slice();
            talksToBeReviewedLater.push(action.payload);
            return _extends({}, state, {
                current: _talks,
                talksToBeReviewedLater: talksToBeReviewedLater
            });
        default:
            return state;
    }
};