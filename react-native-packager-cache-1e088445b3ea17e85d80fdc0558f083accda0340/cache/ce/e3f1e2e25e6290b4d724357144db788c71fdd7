
'use strict';

var fs = require('fs');
var launchChrome = require('../util/launchChrome');
var path = require('path');

var _require = require('child_process'),
    exec = _require.exec;

function launchChromeDevTools(port) {
  var debuggerURL = 'http://localhost:' + port + '/debugger-ui';
  console.log('Launching Dev Tools...');
  launchChrome(debuggerURL);
}

function escapePath(pathname) {
  return '"' + pathname + '"';
}

function launchDevTools(_ref, isChromeConnected) {
  var port = _ref.port,
      projectRoots = _ref.projectRoots;

  var customDebugger = process.env.REACT_DEBUGGER;
  if (customDebugger) {
    var projects = projectRoots.map(escapePath).join(' ');
    var command = customDebugger + ' ' + projects;
    console.log('Starting custom debugger by executing: ' + command);
    exec(command, function (error, stdout, stderr) {
      if (error !== null) {
        console.log('Error while starting custom debugger: ' + error);
      }
    });
  } else if (!isChromeConnected()) {
    launchChromeDevTools(port);
  }
}

module.exports = function (options, isChromeConnected) {
  return function (req, res, next) {
    if (req.url === '/debugger-ui') {
      var debuggerPath = path.join(__dirname, '..', 'util', 'debugger.html');
      res.writeHead(200, { 'Content-Type': 'text/html' });
      fs.createReadStream(debuggerPath).pipe(res);
    } else if (req.url === '/debuggerWorker.js') {
      var workerPath = path.join(__dirname, '..', 'util', 'debuggerWorker.js');
      res.writeHead(200, { 'Content-Type': 'application/javascript' });
      fs.createReadStream(workerPath).pipe(res);
    } else if (req.url === '/launch-safari-devtools') {
      console.log('We removed support for Safari dev-tools. ' + 'If you still need this, please let us know.');
    } else if (req.url === '/launch-chrome-devtools') {
      console.log('The method /launch-chrome-devtools is deprecated. You are ' + ' probably using an application created with an older CLI with the ' + ' packager of a newer CLI. Please upgrade your application: ' + 'https://facebook.github.io/react-native/docs/upgrading.html');
      launchDevTools(options, isChromeConnected);
      res.end('OK');
    } else if (req.url === '/launch-js-devtools') {
      launchDevTools(options, isChromeConnected);
      res.end('OK');
    } else {
      next();
    }
  };
};